/** 
 *  DONATIONS HUFF EXERCISE
 *  
 *  The task is to Implement solidity's "receive" functionality which allows sending ether to a smart contract without any calldata
 *  also have a getter function that returns how much an address has donated. Addresses can donate several times
 */

#define function donated(address) payable returns(uint256)

#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    __FUNC_SIG(donated) eq donated jumpi
    callvalue iszero not donate jumpi

    revertJump:
    0x00 0x00 revert

    donate:
    caller 0x00 mstore
    0x20 0x00 sha3
    dup1
    sload 
    callvalue
    add
    swap1
    sstore
    stop
    
    donated:
    0x04 calldataload
    0x00 mstore
    0x20 0x00 sha3
    sload
    0x00 mstore
    0x20 0x00 return
}